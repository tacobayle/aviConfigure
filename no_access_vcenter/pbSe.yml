- hosts: localhost
  connection: local
  gather_facts: no

  roles:
    - role: "avinetworks.avisdk"

  tasks:

    - name: Set variable avi_credentials
      set_fact:
        avi_credentials: >
          {'api_version': "{{ avi_version }}",
           'controller': "{{ controllerPrivateIps.0 }}",
           'password': "{{ avi_password }}",
           'username': "{{ avi_username }}"}
      tags:
        - creds
      when:
        - avi_version is defined
        - controllerPrivateIps is defined
        - avi_password is defined
        - avi_username is defined

    - name: Define ova path (in localhost variable)
      set_fact:
        ova_path: "./se.ova"
      when:
        - no_access_vcenter.name is defined

    - name: Get Clouds list
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        path: cloud
      register: cloudResults
      ignore_errors: yes

    - name: Define ova path (in localhost variable)
      set_fact:
        cloud_no_access_vcenter_uuid: "{{ item.uuid }}"
      loop: "{{ cloudResults.obj.results }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - item.name == no_access_vcenter.name

    #     - name: debugging Start of the python script
    #       debug:
    #         msg: python3 python/loopOverSeGroup.py pbSeCreation.yml ~/ansible/vars/fromTerraform.yml ~/ansible/vars/fromTfServiceEngineGroup.json "{{ avi_credentials | to_json }}" "{{ cloud_uuid_no_access | to_json }}" "{{ ova_path | to_json }}"
    #       when:
    #         - no_access is defined

    #    - name: dump variable to file
    #      copy:
    #        content: "{{ no_access_vcenter }}"
    #        dest: no_access_vcenter.json
    #      when:
    #        - no_access_vcenter is defined


    #    - name: Run a playbook against SE group (SE Creation and SE Group Assignement) - this takes several minutes
    #      command: python3 ../python/loopOverSeGroupCount.py ../no_access_vcenter/pbSeCreation.yml "{{ avi_credentials | to_json }}" "{{ cloud_no_access_vcenter_uuid | to_json }}" "{{ ova_path | to_json }}" "{{ vsphere_username | to_json }}" "{{ vsphere_password | to_json }}" "no_access_vcenter.json"
    #      register: logPbSeCreation
    #      when:
    #        - no_access_vcenter.name is defined
    #
    #    - name: debugging SE creation
    #      debug:
    #        msg: "{{ logPbSeCreation }}"
    #      when:
    #        - no_access_vcenter.name is defined

    - name: Add Content Library - Easy-Avi-CL-SE-NoAccess - import SE image
      shell: |
        export GOVC_DATACENTER="{{ no_access_vcenter.vcenter.dc }}"
        export GOVC_URL="https://{{ vsphere_username }}:{{ vsphere_password }}@{{ vsphere_server }}"
        export GOVC_DATASTORE="{{ no_access_vcenter.vcenter.datastore }}"
        export GOVC_INSECURE=true
        env | grep GOVC
        govc library.create Easy-Avi-CL-SE-NoAccess
        govc library.import Easy-Avi-CL-SE-NoAccess {{ ova_path }}
      when:
        - no_access_vcenter.vcenter.dc is defined
        - vsphere_username is defined
        - vsphere_password is defined
        - vsphere_server is defined
        - ova_path is defined

    #    - name: Debug
    #      debug:
    #        msg: "{{ avi_credentials | to_yaml }}"
    #
    #    - name: Debug
    #      debug:
    #        msg: "{{ item | to_yaml }}"
    #      loop: "{{ no_access_vcenter.serviceEngineGroup }}"

    #    - name: Debug
    #      debug:
    #        msg: "{{ cloud_no_access_vcenter_uuid }}"
    #
    ##    - name: Debug
    ##      debug:
    ##        msg: "{{ no_access_vcenter.network_management | to_yaml }}"
    #
    #    - name: Debug
    #      debug:
    #        msg: "{{ no_access_vcenter.network_vip.name }}"
    #
    #    - name: Debug
    #      debug:
    #        msg: "{{ no_access_vcenter.vcenter | to_yaml }}"
    #
    #    - name: Debug
    #      debug:
    #        msg: "{{ vsphere_username }}"
    #
    #    - name: Debug
    #      debug:
    #        msg: "{{ vsphere_password }}"
    #
    #    - name: Debug
    #      debug:
    #        msg: "{{ vsphere_server }}"
    #
    #    - name: Debug
    #      debug:
    #        msg: "{{ ova_path | to_json }}"

    - name: Run a playbook against SE group (SE Creation and SE Group Assignement) - this takes several minutes
      #      command: python3 seCreation.py "avi_credentials.json"
      command: python3 ../python/seCreationVmware2.py "{{ avi_credentials | to_yaml }}" "{{ item | to_yaml }}" "{{ cloud_no_access_vcenter_uuid }}" "{{ no_access_vcenter.vcenter | to_yaml }}" "{{ vsphere_username }}" "{{ vsphere_password }}" "{{ vsphere_server }}" "Easy-Avi-CL-SE-NoAccess" "{{ no_access_vcenter.deployment_id }}"
      register: logPbSeCreation
      loop: "{{ no_access_vcenter.serviceEngineGroup }}"
      ignore_errors: yes
      when:
        - cloud_no_access_vcenter_uuid is defined
        - no_access_vcenter.serviceEngineGroup is defined
        - avi_credentials is defined
        - no_access_vcenter.vcenter is defined
        - vsphere_username is defined
        - vsphere_password is defined
        - vsphere_server is defined
        - no_access_vcenter.deployment_id is defined

    #    - name: debugging SE creation
    #      debug:
    #        msg: "{{ logPbSeCreation }}"
    #      when:
    #        - logPbSeCreation is defined

    - name: Remove Content Library - Easy-Avi-CL-SE-NoAccess
      shell: |
        export GOVC_DATACENTER="{{ no_access_vcenter.vcenter.dc }}"
        export GOVC_URL="https://{{ vsphere_username }}:{{ vsphere_password }}@{{ vsphere_server }}"
        export GOVC_INSECURE=true
        env | grep GOVC
        govc library.rm Easy-Avi-CL-SE-NoAccess
      when:
        - no_access_vcenter.vcenter.dc is defined
        - vsphere_username is defined
        - vsphere_password is defined
        - vsphere_server is defined