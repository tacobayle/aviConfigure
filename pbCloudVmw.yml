---
- hosts: localhost
  connection: local
  gather_facts: no

  roles:
    - role: "avinetworks.avisdk"

  tasks:

    - name: Configure Avi Cloud for Vcenter
      avi_cloud:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name:  "{{ vmw.name }}"
        vtype: CLOUD_VCENTER
        vcenter_configuration: "{{ vmw.vcenter_configuration }}"
        dhcp_enabled: "{{ vmw.dhcp_enabled }}"
      register: aviCloudOutput
      when:
        - vmw is defined
      tags:
        - cloud

    - name: Pause for 1 minute
      pause:
        minutes: 1
      when:
        - vmw is defined
      tags:
        - cloud

    - name: get Network details
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        timeout: 300
        path: network
        params:
          page_size: -1
      register: networkOutput
      tags:
        - cloud
        - network
        - ipamdns
      when:
        - vmw is defined

    - name: Update Mgmt Network (for Vmware)
      avi_network:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        cloud_ref: "/api/cloud/?name={{ vmw.name }}"
        tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
        avi_api_patch_op : add
        avi_api_update_method: patch
        uuid: "{{ networkMgtUuid | default(omit) }}"
        name: "{{ vmw.network }}"
        dhcp_enabled: "{{ vmw.networkDhcpEnabled | default(omit) }}"
        exclude_discovered_subnets: "{{ vmw.networkExcludeDiscoveredSubnets | default(omit) }}"
        vcenter_dvs: "{{ vmw.networkVcenterDvs | default(omit) }}"
      when:
        - vmw.network is defined
        - vmw is defined
      tags:
        - cloud
        - network
        - ipamdns

    - name: get Network details
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        timeout: 300
        path: network
        params:
          page_size: -1
      register: networkOutput
      tags:
        - cloud
      when:
        - vmw is defined

    - name: Define subnet variable for vip network
      set_fact:
        vipConfigured_subnets:
          - prefix:
              mask: "{{ avi_network_vip.cidr.split('/')[1] }}"
              ip_addr:
                type: "{{ avi_network_vip.type }}"
                addr: "{{ avi_network_vip.cidr.split('/')[0] }}"
            static_ip_ranges:
              - range:
                  begin:
                    type: "{{ avi_network_vip.type }}"
                    addr: "{{ avi_network_vip.cidr.split('/')[0].split('.')[0] }}.{{ avi_network_vip.cidr.split('/')[0].split('.')[1] }}.{{ avi_network_vip.cidr.split('/')[0].split('.')[2] }}.{{ avi_network_vip.begin }}"
                  end:
                    type: "{{ avi_network_vip.type }}"
                    addr: "{{ avi_network_vip.cidr.split('/')[0].split('.')[0] }}.{{ avi_network_vip.cidr.split('/')[0].split('.')[1] }}.{{ avi_network_vip.cidr.split('/')[0].split('.')[2] }}.{{ avi_network_vip.end }}"
      when:
        - avi_network_vip is defined
        - vmw is defined
      tags:
        - ipam

    - name: Update Vip Network for V-vcenter
      avi_network:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        cloud_ref: "/api/cloud/?name={{ vmw.name }}"
        tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
        name: "{{ avi_network_vip.name }}"
        configured_subnets: "{{ vipConfigured_subnets }}"
        dhcp_enabled: "{{ avi_network_vip.dhcp_enabled }}"
        exclude_discovered_subnets: "{{ avi_network_vip.exclude_discovered_subnets }}"
        vcenter_dvs: "{{ avi_network_vip.vcenter_dvs }}"
      register: networkOutput
      when:
        - avi_network_vip is defined
        - vmw is defined
      tags:
        - ipam

    - name: Define subnet variable for backend network
      set_fact:
        backendConfigured_subnets:
          - prefix:
              mask: "{{ avi_network_backend.cidr.split('/')[1] }}"
              ip_addr:
                type: "{{ avi_network_backend.type }}"
                addr: "{{ avi_network_backend.cidr.split('/')[0] }}"
      when:
        - avi_network_backend is defined
        - vmw is defined
      tags:
        - ipam

    - name: Update Network backend
      avi_network:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        cloud_ref: "/api/cloud/?name={{ vmw.name }}"
        tenant_ref: "/api/tenant?name={{ item.tenant_ref | default('admin') }}"
        name: "{{ avi_network_backend.name }}"
        configured_subnets: "{{ backendConfigured_subnets }}"
        dhcp_enabled: "{{ avi_network_backend.dhcp_enabled }}"
        exclude_discovered_subnets: "{{ avi_network_backend.exclude_discovered_subnets }}"
        vcenter_dvs: "{{ avi_network_backend.vcenter_dvs }}"
      when:
        - avi_network_backend is defined
        - vmw is defined
      tags:
        - ipam

    - name: Update Avi IPAM
      avi_ipamdnsproviderprofile:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        avi_api_patch_op: add
        avi_api_update_method: patch
        internal_profile:
          usable_networks:
            - nw_ref: "/api/network/{{ networkOutput.obj.uuid | default(networkVipUuid) }}"
        name: "{{ ipam.name | default('ipam-avi') }}"
        type: IPAMDNS_TYPE_INTERNAL
      when:
        - avi_network_vip is defined
        - vmw is defined
      tags:
        - ipam

    - pause:
        minutes: 1
      when:
        - vmw is defined
      tags:
        - cloud
        - debugnsxt

    - name: Update Avi Cloud (Vcenter)
      avi_cloud:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "{{ vmw.name }}"
        vtype: CLOUD_VCENTER
        vcenter_configuration: "{{ vmw.vcenter_configuration }}"
        dhcp_enabled: "{{ vmw.dhcp_enabled }}"
        ipam_provider_ref: "/api/ipamdnsproviderprofile/?name={{ vmw.ipam_provider_ref | default('ipam-avi') }}"
        dns_provider_ref: "/api/ipamdnsproviderprofile/?name={{ vmw.dns_provider_ref | default('dns-avi') }}"
        se_group_template_ref: "/api/serviceenginegroup?name=Default-Group"
      register: aviCloudVmw
      when:
        - avi_network_vip is defined
        - vmw is defined
      tags:
        - cloud
        - ipam
        - dns

#    - pause:
#        minutes: 2
#      when:
#        - vmw is defined
#      tags:
#        - cloud

    - set_fact:
        cloud_uuid_vmw: "{{ aviCloudVmw.obj.uuid }}"
      when:
        - vmw is defined
      tags:
        - cloud

