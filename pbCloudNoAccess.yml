---
- hosts: localhost
  connection: local
  gather_facts: no

  roles:
    - role: "avinetworks.avisdk"

  tasks:

    - add_host:
        hostname: avicontroller
        ansible_host: "{{ avi_credentials.controller }}"
        ansible_port: 22
        ansible_user: "{{ controller.username }}"
        ansible_ssh_pass: "{{ controller.password }}"
      when:
        - no_access is defined


    - block:
      - name: Retrieve Avi Version Info
        avi_api_session:
          avi_credentials: "{{ avi_credentials | default(omit) }}"
          api_context: "{{ avi_api_context | default(omit) }}"
          http_method: get
          path: cluster/runtime
          params:
        register: cluster_results
        delegate_to: "localhost"

      - set_fact:
          se_master_ctl_version: "{{ cluster_results.obj.node_info.version.split('(')[0] }}"


      - name: Avi SE | Image deploy | Set SE image path for controller version < 18.2.6
        set_fact:
          se_image_path: "/opt/avi/se_ova"
        when:
          - se_master_ctl_version < "18.2.6"

      when:
        - no_access is defined

#### end of block


    - block:
      - name: Retrieve Avi Version Info
        avi_api_session:
          avi_credentials: "{{ avi_credentials | default(omit) }}"
          api_context: "{{ avi_api_context | default(omit) }}"
          http_method: get
          path: "initial-data"
        register: data_res
        delegate_to: "localhost"

      - set_fact:
          se_master_ctl_version: "{{ cluster_results.obj.node_info.version.split('(')[0] }}"

      - name: Avi SE | Image deploy | Set SE image path for controller version >= 18.2.6
        set_fact:
          se_image_path: "/host/pkgs/{{ data_res.obj.version.Tag }}"
        when:
          - se_master_ctl_version >= "18.2.6"

      when:
        - no_access is defined

#### end of block

    - name:  Generate SE image on controller
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: post
        path: 'fileservice/seova'
        timeout: 600
        data:
          file_format: ova
      delegate_to: localhost
      when:
        - no_access is defined

- hosts: avicontroller
  gather_facts: no

  tasks:

    - set_fact:
        se_image_path: "{{ hostvars['localhost']['se_image_path'] }}"

    - name: Download SE image
      fetch:
        src: "{{ se_image_path }}/se.ova"
        dest: ./
        flat: yes
        validate_checksum: False
      when:
        - no_access is defined

    - name: Define ova path
      set_fact:
        ova_path: "./se.ova"
      when:
        - no_access is defined

    - name: Configure Avi Cloud for No Access
      avi_cloud:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "{{ no_access.name }}"
        vtype: CLOUD_NONE
        apic_mode: false
        dhcp_enabled: "{{ no_access.dhcp_enabled }}"
        mtu: 1500
        prefer_static_routes: false
        enable_vip_static_routes: false
        license_type: LIC_CORES
        state_based_dns_registration: "{{ no_access.state_based_dns_registration }}"
        ip6_autocfg_enabled: "{{ no_access.ip6_autocfg_enabled }}"
        dns_resolution_on_se: false
        enable_vip_on_all_interfaces: false
        license_tier: ENTERPRISE
        autoscale_polling_interval: 60
        ipam_provider_ref: "/api/ipamdnsproviderprofile/?name={{ no_access.ipam_provider_ref | default('ipam-avi') }}"
        dns_provider_ref: "/api/ipamdnsproviderprofile/?name={{ no_access.dns_provider_ref | default('dns-avi') }}"
      register: aviCloudOutput
      tags:
        - cloud
      when:
        - no_access is defined

    - name:  Define Cloud UUID variable
      set_fact:
        cloud_uuid_no_access: "{{ aviCloudOutput.obj.uuid }}"
      when:
        - no_access is defined

    - name: Generate Auth Token for SE
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        path: securetoken-generate
        params:
          cloud_uuid: "{{ cloud_uuid_no_access }}"
      register: token_results
      when:
        - no_access is defined
      delegate_to: "localhost"

    - name: Define auth token variable
      set_fact:
        auth_token: "{{ token_results.obj.auth_token }}"
      when:
        - no_access is defined

    - name: Get main Cluster Information
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        path: cluster
      register: clusterInfo
      when:
        - no_access is defined
      tags:
        - cluster

    - name: Define cluster uuid variable
      set_fact:
        cluster_uuid: "{{ clusterInfo['obj'].uuid }}"
      when:
        - no_access is defined

    - name: Debug variable cloud uuid
      debug:
        msg: "{{ cloud_uuid_no_access }}"
      tags:
        - debug
      when:
        - no_access is defined

    - name: Debug Auth Token
      debug:
        msg: "{{ auth_token }}"
      tags:
        - debug
      when:
        - no_access is defined

    - name: Debug variable cluster uuid
      debug:
        msg: "{{ cluster_uuid }}"
      tags:
        - debug
      when:
        - no_access is defined

    - name: Debug variable controller IP
      debug:
        msg: "{{ avi_credentials.controller }}"
      tags:
        - debug
      when:
        - no_access is defined

    - name: Debug variable OVA path
      debug:
        msg: "{{ ova_path }}"
      tags:
        - debug
      when:
        - no_access is defined
