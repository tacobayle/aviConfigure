---
aviUser:
  - name: ansible
    is_superuser: true
    user_profile_ref: "/api/useraccountprofile?name=Default-User-Account-Profile"
    is_active: true
    default_tenant_ref: "/api/tenant?name=admin"
    access:
      - role_ref: "/api/role?name=System-Admin"
        tenant_ref: "/api/tenant/admin#admin"
      - all_tenants: true
        role_ref: "/api/role?name=System-Admin"
    credsJsonFile: ../aviLscCloud/vars/creds.json
  - name: terraform
    is_superuser: true
    user_profile_ref: "/api/useraccountprofile?name=Default-User-Account-Profile"
    is_active: true
    default_tenant_ref: "/api/tenant?name=admin"
    access:
      - role_ref: "/api/role?name=System-Admin"
        tenant_ref: "/api/tenant/admin#admin"
      - all_tenants: true
        role_ref: "/api/role?name=System-Admin"
    credsJsonFile: ../../terraform/aviVs/creds.tfvars.json
  - name: python
    is_superuser: true
    user_profile_ref: "/api/useraccountprofile?name=Default-User-Account-Profile"
    is_active: true
    default_tenant_ref: "/api/tenant?name=admin"
    access:
      - role_ref: "/api/role?name=System-Admin"
        tenant_ref: "/api/tenant/admin#admin"
      - all_tenants: true
        role_ref: "/api/role?name=System-Admin"
    credsJsonFile: ../../python/aviVs/creds.json
  - name: vrovra
    is_superuser: true
    user_profile_ref: "/api/useraccountprofile?name=Default-User-Account-Profile"
    is_active: true
    default_tenant_ref: "/api/tenant?name=admin"
    access:
      - role_ref: "/api/role?name=System-Admin"
        tenant_ref: "/api/tenant/admin#admin"
      - all_tenants: true
        role_ref: "/api/role?name=System-Admin"


aws:
  region: region
  secretAccessKey: secretAccessKey
  accessKeyId: accessKeyId
  vpcId: vpcId

# awsZones:
# - zone1
# - zone2
# - zone3
#
# awsSubnetSeMgtIds:
# - subnetId1
# - subnetId2
# - subnetId3
#
# awsSubnetSeMgtNames:
# - 192.168.1.0
# - 192.168.2.0
# - 192.168.3.0
# - 192.168.4.0
