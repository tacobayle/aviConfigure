---
- hosts: localhost
  connection: local
  gather_facts: no

  roles:
    - role: "avinetworks.avisdk"

  tasks:

    - name: Defining SE Memory - LSC
      set_fact:
        seMem: "{{ lsc.serviceEngineGroup.memory_per_se / 1000 }}"
      when:
        - lsc is defined
      tags:
        - cloud

    - name: Defining SE Memory - LSC
      set_fact:
        seMemG: "{{ seMem | float | round(0,'common') | int }}"
      when:
        - lsc is defined
      tags:
        - cloud

    - name: Defining SE structure - LSC
      set_fact:
        listSe: "{{ listSe | default([]) + [{ 'host_attr': [{'attr_key': 'CPU', 'attr_val': lsc.serviceEngineGroup.vcpus_per_se }, {'attr_key': 'MEMORY', 'attr_val': seMemG}, {'attr_key': 'DPDK', 'attr_val': lsc.serviceEngineGroup.DPDK }, {'attr_key': 'SE_INBAND_MGMT', 'attr_val': lsc.serviceEngineGroup.SE_INBAND_MGMT }], 'host_ip': {'type': 'V4', 'addr': item }} ] }}"
      loop: "{{ seLsc }}"
      when:
        - lsc is defined
      tags:
        - cloud

    - name: Creating Linux Server Cloud - LSC
      avi_cloud:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        vtype: CLOUD_LINUXSERVER
        license_tier: ENTERPRISE_18
        enable_vip_static_routes: false
        ip6_autocfg_enabled: false
        dhcp_enabled: false
        linuxserver_configuration:
          se_sys_disk_size_GB: 10
          se_log_disk_size_GB: 5
          se_inband_mgmt: false
          hosts: '{{ listSe }}'
          ssh_user_ref: /api/cloudconnectoruser/?name=credsLsc
        prefer_static_routes: false
        license_type: LIC_CORES
        mtu: 1500
        apic_mode: false
        state_based_dns_registration: true
        dns_provider_ref: "/api/ipamdnsproviderprofile/?name={{ lsc.dns_provider_ref | default('dns-avi') }}"
        name: "{{ lsc.name }}"
      register: output_cloud_lsc
      when:
        - lsc is defined
      tags:
        - cloud

    - set_fact:
        cloud_lsc_uuid: "{{ output_cloud_lsc.obj.uuid }}"
      when:
        - lsc is defined
      tags:
        - cloud

    - name: Define Network Range IP Begin - LSC
      set_fact:
        ipBegin: "{{ lsc.network_vip.cidr | ipaddr(lsc.network_vip.ipStartPool) }}"
      when:
        - lsc is defined
        - lsc.network_vip.cidr is defined
        - lsc.network_vip.ipStartPool is defined

    - name: Define Network Range IP Begin - LSC
      set_fact:
        ipBegin: "{{ ipBegin.split('/')[0] }}"
      when:
        - lsc is defined
        - lsc.network_vip.cidr is defined
        - lsc.network_vip.ipStartPool is defined

    - name: Define Network Range IP End - LSC
      set_fact:
        ipEnd: "{{ lsc.network_vip.cidr | ipaddr(lsc.network_vip.ipEndPool) }}"
      when:
        - lsc is defined
        - lsc.network_vip.cidr is defined
        - lsc.network_vip.ipEndPool is defined

    - name: Define Network Range IP End - LSC
      set_fact:
        ipEnd: "{{ ipEnd.split('/')[0] }}"
      when:
        - lsc is defined
        - lsc.network_vip.cidr is defined
        - lsc.network_vip.ipEndPool is defined

    - name: Define configured_subnets for network - LSC
      set_fact:
        configured_subnets:
          - prefix:
              mask: "{{ lsc.network_vip.cidr.split('/')[1] }}"
              ip_addr:
                type: "{{ lsc.network_vip.type | default('V4') }}"
                addr: "{{ lsc.network_vip.cidr.split('/')[0] }}"
            static_ip_ranges:
              - range:
                  begin:
                    type: "{{ lsc.network_vip.type | default('V4') }}"
                    addr: "{{ ipBegin }}"
                  end:
                    type: "{{ lsc.network_vip.type | default('V4') }}"
                    addr: "{{ ipEnd }}"
      when:
        - ipBegin is defined
        - ipEnd is defined
        - lsc.network_vip.cidr is defined
        - lsc is defined

    - name: Create Network for IPAM - LSC
      avi_network:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "{{ lsc.network_vip.name }}"
        cloud_ref: "/api/cloud/?name={{ lsc.name }}"
        configured_subnets: "{{ configured_subnets }}"
        dhcp_enabled: "{{ lsc.network_vip.dhcp_enabled | default('false')}}"
      register: output_network_vip_lsc
      when:
        - lsc is defined
      tags:
        - ipam

    - name: Create Avi IPAM with Network configured - LSC
      avi_ipamdnsproviderprofile:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        internal_profile:
          usable_networks:
            - nw_ref: "/api/network/{{ output_network_vip_lsc.obj.uuid }}"
        name: "{{ ipam.name | default('ipam-avi-lsc') }}"
        type: IPAMDNS_TYPE_INTERNAL
      when:
        - lsc is defined
        - output_network_vip_lsc.obj.uuid is defined
      tags:
        - ipam

    - name: Updating LSC Cloud with IPAM - LSC
      avi_cloud:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        vtype: CLOUD_LINUXSERVER
        license_tier: ENTERPRISE_18
        enable_vip_static_routes: false
        ip6_autocfg_enabled: false
        dhcp_enabled: false
        linuxserver_configuration:
          se_sys_disk_size_GB: 10
          se_log_disk_size_GB: 5
          se_inband_mgmt: false
          hosts: '{{ listSe }}'
          ssh_user_ref: /api/cloudconnectoruser/?name=credsLsc
        prefer_static_routes: false
        license_type: LIC_CORES
        mtu: 1500
        apic_mode: false
        state_based_dns_registration: true
        ipam_provider_ref: "/api/ipamdnsproviderprofile/?name={{ lsc.ipam_provider_ref | default('ipam-avi-lsc') }}"
        dns_provider_ref: "/api/ipamdnsproviderprofile/?name={{ lsc.dns_provider_ref | default('dns-avi') }}"
        name: "{{ lsc.name }}"
      when:
        - lsc is defined
      tags:
        - cloud