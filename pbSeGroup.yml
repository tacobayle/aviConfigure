---
- hosts: localhost
  connection: local

  roles:
    - role: "avinetworks.avisdk"

  tasks:

    - name: Modify/Creating SE group
      avi_serviceenginegroup:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        cloud_ref: "/api/cloud/?name={{ item.cloud_ref | default('Default-Cloud') }}"
        avi_api_update_method: put
        name: "{{ item.name }}"
        ha_mode: "{{ item.ha_mode | default('HA_MODE_SHARED') }}"
        min_scaleout_per_vs: "{{ item.min_scaleout_per_vs | default(omit) }}"
        buffer_se: "{{ item.buffer_se | default(omit) }}"
        extra_shared_config_memory: "{{ item.extra_shared_config_memory | default(omit) }}"
        vcenter_folder: "{{ item.vcenter_folder | default(omit) }}"
        vcpus_per_se: "{{ item.vcpus_per_se | default(omit) }}"
        memory_per_se: "{{ item.memory_per_se | default(omit) }}"
        disk_per_se: "{{ item.disk_per_se | default(omit) }}"
        realtime_se_metrics: "{{ item.realtime_se_metrics | default(omit) }}"
        auto_rebalance: "{{ item.auto_rebalance | default(omit) }}"
        auto_rebalance_interval: "{{ item.auto_rebalance_interval | default(omit) }}"
        auto_rebalance_criteria: "{{ item.auto_rebalance_criteria | default(omit) }}"
        instance_flavor: "{{ item.instance_flavor | default(omit) }}"
        accelerated_networking: "{{ item.accelerated_networking | default(omit) }}"
      when:
        - serviceEngineGroup is defined
      loop: "{{ serviceEngineGroup }}"
      loop_control:
        label: "Modifying SE group called {{ item.name }}"
      tags:
        - serviceEngineGroup

# the folllowing applies only for no_access cloud

    - add_host:
        hostname: avicontroller
        ansible_host: "{{ avi_credentials.controller }}"
        ansible_port: 22
        ansible_user: "{{ controller.username }}"
        ansible_ssh_pass: "{{ controller.password }}"
      when:
        - no_access is defined


    - block:
      - name: Retrieve Avi Version Info
        avi_api_session:
          avi_credentials: "{{ avi_credentials | default(omit) }}"
          api_context: "{{ avi_api_context | default(omit) }}"
          http_method: get
          path: cluster/runtime
          params:
        register: cluster_results
        delegate_to: "localhost"

      - set_fact:
          se_master_ctl_version: "{{ cluster_results.obj.node_info.version.split('(')[0] }}"


      - name: Avi SE | Image deploy | Set SE image path for controller version < 18.2.6
        set_fact:
          se_image_path: "/opt/avi/se_ova"
        when:
          - se_master_ctl_version < "18.2.6"

      when:
        - no_access is defined

#### end of block

    - block:
      - name: Retrieve Avi Version Info
        avi_api_session:
          avi_credentials: "{{ avi_credentials | default(omit) }}"
          api_context: "{{ avi_api_context | default(omit) }}"
          http_method: get
          path: "initial-data"
        register: data_res
        delegate_to: "localhost"

      - set_fact:
          se_master_ctl_version: "{{ cluster_results.obj.node_info.version.split('(')[0] }}"

      - name: Avi SE | Image deploy | Set SE image path for controller version >= 18.2.6
        set_fact:
          se_image_path: "/host/pkgs/{{ data_res.obj.version.Tag }}"
        when:
          - se_master_ctl_version >= "18.2.6"

      when:
        - no_access is defined

#### end of block

    - name:  Generate SE image on controller
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: post
        path: 'fileservice/seova'
        timeout: 600
        data:
          file_format: ova
      delegate_to: localhost
      when:
        - no_access is defined

- hosts: avicontroller
  gather_facts: no

  tasks:

    - set_fact:
        se_image_path: "{{ hostvars['localhost']['se_image_path'] }}"

    - name: Download SE image
      fetch:
        src: "{{ se_image_path }}/se.ova"
        dest: ./
        flat: yes
        validate_checksum: False
      when:
        - no_access is defined

    - name: Define ova path (in controller variable)
      set_fact:
        ova_path: "./se.ova"
      when:
        - no_access is defined


- hosts: localhost
  connection: local
  gather_facts: no

  roles:
    - role: "avinetworks.avisdk"

  tasks:

    - name: Define ova path (in localhost variable)
      set_fact:
        ova_path: "{{ hostvars['avicontroller']['ova_path'] }}"
      when:
        - no_access is defined

#     - name: debugging Start of the python script
#       debug:
#         msg: python3 python/loopOverSeGroup.py pbSeCreation.yml ~/ansible/vars/fromTerraform.yml ~/ansible/vars/fromTfServiceEngineGroup.json "{{ avi_credentials | to_json }}" "{{ cloud_uuid_no_access | to_json }}" "{{ ova_path | to_json }}"
#       when:
#         - no_access is defined

    - name: Run a playbook against SE group (SE Creation and SE Group Assignement) - this takes several minutes
      command: python3 python/loopOverSeGroup.py pbSeCreation.yml ~/ansible/vars/fromTerraform.yml ~/ansible/vars/fromTfServiceEngineGroup.json "{{ avi_credentials | to_json }}" "{{ cloud_uuid_no_access | to_json }}" "{{ ova_path | to_json }}"
      register: logPbSeCreation
      when:
        - no_access is defined

#    - name: debugging SE creation
#      debug:
#        msg: "{{ logPbSeCreation }}"
#      when:
#        - no_access is defined
